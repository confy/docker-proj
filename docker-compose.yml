version: '3'
services:
  enter-data:
    image: proj-enter-data
    build:
      context: ./enter_data
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      AUTH_HOST: authentication
      DB_HOST: mysql
      DB_DATABASE: proj
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: test_pass
    
    restart: unless-stopped
    depends_on:
      - authentication
      - mysql
    networks:
      - inet

  show-results:
    image: proj-show-results
    build:
      context: ./show_results
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    restart: unless-stopped
    environment:
      HOSTNAME: authentication
    networks:
      - inet

  authentication:
    image: proj-authentication
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "5000:80"
    networks:
      - inet

  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'proj'
      MYSQL_ROOT_PASSWORD: 'test_pass'
    ports:
      - '3306:3306'
    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 1
    expose:
      - '3306'
    volumes:
      - proj_mysql:/var/lib/mysql
    networks:
      - inet

  mysql-setup:
    image: proj-mysql-setup
    build:
      context: ./mysql_setup
      dockerfile: Dockerfile
    environment:
      DB_HOST: database
      DB_DATABASE: proj
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: test_pass
    links:
      - "mysql:database"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - inet

  stats:
    image: proj-stats
    build:
      context: ./stats_service
      dockerfile: Dockerfile
    environment:
      DB_HOST: database
      DB_DATABASE: proj
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: test_pass
      PUBLISH_SECONDS: 5
      MONGO_DATABASE: stats
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_USER: root
      MONGO_PASSWORD: test_pass
    links:
      - "mysql:database"
    depends_on:
      mysql:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - inet


  mongodb:
    image: mongo:4.0.3
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: test_pass
    ports:
      - '27017:27017'
    healthcheck:
            test: ["CMD", "mongo" ,"--eval", "db.adminCommand('ping')"]
            timeout: 20s
            retries: 1
    expose:
      - '27017'
    volumes:
      - proj_mongodb:/data/db
    networks:
      - inet

volumes:
  proj_mysql:
  proj_mongodb:

networks:
  inet: